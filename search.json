[{"path":"https://robert-koch-institut.github.io/excode/articles/excode.html","id":"overwiew-of-available-models-in-excode","dir":"Articles","previous_headings":"","what":"Overwiew of available models in excode","title":"Excess count detection for epidemiological time series","text":"five different model classes implemented excode: Mean: model account seasonal cyclical patterns. expectancy normal excess case counts modeled mean historic data. FarringtonNoufaily: popular algorithm, models seasonality segmenting year predefined number shorter time periods, different expectancy observed cases. also allows integration long-term time trend. Harmonic: ‘Harmonic’ model uses sine cosine function account seasonal cyclical patterns data. also allows integration long-term time trends. Custom: ‘Custom’ model allows user define model providing data frame containing covariate data. mentioned models use two states - ‘normal’ ‘excess’ state - detect excess counts. However cases might necessary allow multiple states, ‘normal’, ‘low excess’, ‘medium excess’, ‘high excess’, account wide range excess counts detect periods showing excess time series. MultiState: ‘MultiState’ model allows use multiple states. number states can specified user. Like ‘Custom’ model, user must provide covariate data control possible seasonal long-term time trends. use model advanced models requires additional steps fitting. Figure 1 shows examples ‘Mean’, ‘Harmonic’ ‘FarringtonNoufaily’ model. Figure 1: Examples ‘Mean’, ‘Harmonic’ ‘FarringtonNoufaily’ model.","code":""},{"path":"https://robert-koch-institut.github.io/excode/articles/excode.html","id":"using-excode-for-excess-count-detection","dir":"Articles","previous_headings":"","what":"Using excode for excess count detection","title":"Excess count detection for epidemiological time series","text":"input data timeseries containing date observed number cases. can data.frame, sts object surveillance R package list sts objects. input dataset needs contain following variables: date: date aggregation. observed: observed number cases. id: name id time series. Optional variables can : offset (optional): e.g. susceptible population. state (optional): events, disease outbreaks, caused excess counts time periods known normal case counts, can indicated (e.g. 0=normal, 1=excess, NA=unknown). example data shadar_df section contains number weekly cases Salmonella hadar 2001 2006 Germany (taken surveillance package). dataset contain offset state variable adjust population size true disease outbreak labels included. Figure 2 shows cyclical pattern case counts, cases summer fewer cases cases winter also decrease reported cases years, except year 2006, outbreak lead surge case numbers compared previous years. Figure 2: Weekly Salmonella Newport cases. running excess count detection, user needs decide probability distribution model used. done using excodeFamily excodeFormula objects excode package. combined excodeModel object, stores necessary parameters specifications model fitting. example, ‘Poisson’ distribution - due cyclical long-term time trend - ‘Harmonic’ model chosen. Printing excode_har_pois gives basic information model specifcations shows model inital model, stores results 0 time points: run_excode() function performs excess count detection. function accepts different data types surveillance timeseries (sts, data.frame, list sts objects). output fitted excodeModel object - result_shadar_har - stores results 87 time points. Results can extracted using summary() function: result data.frame following variables: posterior: Probability excess case counts current time point. pval: P-value null hypothesis excess current timepoint. date: event date (e.g. reporting date date disease onset). timepoint: Timepoint (integer) time series. observed: Number cases current time point. mu0: Number expected cases normal conditions. mu1: Number expected cases excess conditions. id: Name time series. BIC: Bayesian information criterion. AIC: Aikake information criterion. posterior_ub: count threshold based Posterior probability model. observed counts exceed value, time point considered excess counts. default probability calculate threshold 0.5 can changed via parameter prob_threshold summary(). . pval_ub: count threshold based background/normal model. observed counts exceed value, time point considered excess counts. default p-value calculate threshold 0.01 can changed via parameter pval_threshold summary(). Figure 3 shows input data estimated alarm thresholds (posterior_ub pval_ub): Figure 3: Weekly Salmonella Hadar cases alarm thresholds (upper bounds). Models ‘Mean’ ‘FarringtonNoufaily’ can applied likewise.","code":"library(excode) ## Load data an show first 6 rows data(\"shadar_df\") kable(as_tibble(shadar_df[1:6, ])) %>%   kable_styling(font_size = 11) # Plot the time series ggplot(shadar_df, aes(x = date, y = observed)) +   geom_col(color = \"grey\", fill = \"lightgrey\") +   theme_minimal() +   ylab(\"No. of cases\") +   xlab(\"Week of notification\") +   scale_x_date(date_labels = \"%Y\", date_breaks = \"year\") # Use a 'Poisson' distribution in excodeFamily excode_family_pois <- excodeFamily(\"Poisson\") # Define the 'Harmonic' model in excodeFormula excode_formula_har <- excodeFormula(\"Harmonic\") # Combine both in the final excodeModel object excode_har_pois <- excodeModel(   excode_family_pois,   excode_formula_har ) excode_har_pois ## Inital excodeModel ##  excodeFamily: Poisson ##  excodeFormula: Harmonic ## No. of timepoints: 0 # Run excode on time points 209-295 result_shadar_har <- run_excode(   shadar_df,   excode_har_pois,   209:295 )  result_shadar_har ## Fitted excodeModel ##  excodeFamily: Poisson ##  excodeFormula: Harmonic ## No. of timepoints: 87 summary_shadar_har <- summary(result_shadar_har) kable(as_tibble(summary_shadar_har[82:87, ])) %>%   kable_styling(font_size = 11) ggplot(   shadar_df %>% filter(year(date) >= 2003),   aes(x = date, y = observed) ) +   geom_col(color = \"grey\", fill = \"lightgrey\") +   theme_minimal() +   ylab(\"No. of cases\") +   xlab(\"Week of notification\") +   scale_x_date(date_labels = \"%Y\", date_breaks = \"year\") +   geom_step(aes(x = date, y = posterior_ub, color = \"upper bound (posterior)\"),     data = summary_shadar_har, linewidth = 1   ) +   geom_step(aes(x = date, y = pval_ub, color = \"upper bound (pval)\"),     data = summary_shadar_har, linewidth = 1   ) +   geom_point(aes(x = date, y = ifelse(observed > pval_ub, observed, NA), color = \"Alarm (pval)\"),     data = summary_shadar_har, shape = 3   ) +   geom_point(aes(x = date, y = ifelse(observed > posterior_ub, observed, NA), color = \"Alarm (posterior)\"),     data = summary_shadar_har, shape = 4   ) +   scale_color_manual(values = c(\"black\", \"black\", \"gold\", \"tomato\")) +   theme(legend.position = \"top\", legend.title = element_blank()) +   guides(color = guide_legend(ncol = 2))"},{"path":"https://robert-koch-institut.github.io/excode/articles/excode.html","id":"the-custom-model","dir":"Articles","previous_headings":"","what":"The ‘Custom’ model","title":"Excess count detection for epidemiological time series","text":"‘Custom’ model can used fit model covariate data selected user. give example, data SARS-CoV-2 infections Berlin-Neukölln (Germany) March-July 2020 used (downloaded 2024-10-31). Figure 4 shows inital peak infections late March/early April, number infections dropped, showing cases May, followed rise June attributed several local outbreaks. daily number reported SARS-CoV-2 differs course week, showing higher number cases reported weekdays lower number cases weekends. following ‘Custom’ excodeModel used, models mean number reported cases past 8 weeks workdays weekends, detect observed local outbreaks. define necessary covariate data model, data.frame - weekday - created, indicating whether current day workday weekend: used create ‘Custom’ excodeModel object. Note timepoints_per_unit = 7 indicates repeating time periods weeks (default 52, .e. yearly periodic data). , model fitted, taking account 8 weeks historic data (time_units_back = 8) excluding past two days fitting (past_timepoints_not_included = 2). results can plotted follows: Figure 4: Daily reported SARS-CoV-2 infections Berlin-Neukölln alarm thresholds (upper bounds).","code":"data(sarscov2_df) num_wday <- wday(sarscov2_df$date, week_start = 1) weekday <- data.frame(day = factor(ifelse(num_wday <= 5, \"workday\", \"weekend\"),   levels = c(\"workday\", \"weekend\") )) excode_formula_custom <- excodeFormula(\"Custom\", data = weekday, timepoints_per_unit = 7) excode_custom_pois <- excodeModel(   excode_family_pois,   excode_formula_custom ) result_sarscov2_custom <- run_excode(sarscov2_df,   excode_custom_pois,   93:154,   time_units_back = 8,   past_timepoints_not_included = 2 ) summary_sarscov2_custom <- summary(result_sarscov2_custom) ggplot(   sarscov2_df %>%     filter(date <= max(summary_sarscov2_custom$date)),   aes(x = date, y = observed) ) +   geom_col(color = \"grey\", fill = \"lightgrey\") +   theme_minimal() +   ylab(\"No. of cases\") +   xlab(\"Day of reporting\") +   scale_x_date(date_labels = \"%Y-%m\", date_breaks = \"month\") +   geom_step(aes(x = date, y = posterior_ub, color = \"upper bound (posterior)\"),     data = summary_sarscov2_custom, linewidth = 1   ) +   geom_step(aes(x = date, y = pval_ub, color = \"upper bound (pval)\"),     data = summary_sarscov2_custom, linewidth = 1   ) +   geom_point(aes(x = date, y = ifelse(observed > pval_ub, observed, NA), color = \"Alarm (pval)\"),     data = summary_sarscov2_custom, shape = 3   ) +   geom_point(aes(x = date, y = ifelse(observed > posterior_ub, observed, NA), color = \"Alarm (posterior)\"),     data = summary_sarscov2_custom, shape = 4   ) +   scale_color_manual(values = c(\"black\", \"black\", \"gold\", \"tomato\")) +   theme(legend.position = \"top\", legend.title = element_blank()) +   guides(color = guide_legend(ncol = 2))"},{"path":"https://robert-koch-institut.github.io/excode/articles/excode.html","id":"the-multistate-model","dir":"Articles","previous_headings":"","what":"The ‘MultiState’ model","title":"Excess count detection for epidemiological time series","text":"‘MultiState’ model allows multiple states, can necessary use one excess state sufficient model data. can case range excess counts large. illustrate application ‘MultiState’ model, weekly -cause mortality data reported German Federal Statistical Office used (Figure 5). ‘MultiState’ model four states applied detect weeks excess mortality time series. Figure 5: Weekly -cause mortaility Germany.","code":"data(\"mort_df_germany\")  ggplot(mort_df_germany) +   geom_line(aes(x = date, y = observed), linewidth = 1) +   theme_minimal() +   ylab(\"Number of deaths\") +   xlab(\"Week of death\")"},{"path":"https://robert-koch-institut.github.io/excode/articles/excode.html","id":"initialization-of-the-multistate-model","dir":"Articles","previous_headings":"The ‘MultiState’ model","what":"Initialization of the ‘MultiState’ model","title":"Excess count detection for epidemiological time series","text":"models two states, excode automatically initializes fits model. However, using multiple states, initialization GLM part model needs done manually. order , initial estimates expected number cases state need provided. First baseline number deaths estimated, roughly follows EuroMOMO protocol. baseline fit uses sine cosine functions control seasonality well linear time trend. avoid overestimation expected background mortality, weeks 15 26 (spring) 36 45 (autumn) included estimate background model, since time periods excess mortality expected. necessary variables stored mort_df_germany: Using negative binomial model, baseline mortality estimated follows: excode models mean excess states multiplicative increase compared mean normal/background state. Initial estimates mean excess state chosen 75%-, 85%-, 95%-quantile relative increase observed number deaths compared estimated baseline, corresponds 6%, 10% 21% increase: initial estimates mean calculated follows: Now model can defined using excodeFormula(). example, estimated baseline (mu0) kept fixed model fitting. achieve , included offset (offset = TRUE) estimation model estimated without intercept (intercept = FALSE): last step fitting excode model define input data.frame containg necessary variables. Note offset variable set estimated baseline mortality (mort_bckg_mu) timepoints excess assumed included 0s state variable (NA weeks).","code":"kable(as_tibble(mort_df_germany[1:6, ])) %>%   kable_styling(font_size = 11) # Fit background model formula_bckg <- \"observed ~ sin52 + cos52 + timepoint\" mort_glm_bckg <- glm.nb(formula_bckg, mort_df_germany %>%   filter(bckg_week)) # Extract prediction for baseline mortality mort_bckg_mu <- predict(mort_glm_bckg,   newdata = mort_df_germany,   type = \"response\" ) # store size parameter of ngeative binomial distribution theta <- mort_glm_bckg$theta # Relative increase of observed mortality compared to background p_increase <- mort_df_germany$observed / mort_bckg_mu  # Initial values for multipicative increase of model states qcut <- c(0.75, 0.85, 0.95) state_increase <- c(1, quantile(p_increase, prob = qcut)) names(state_increase) <- c(\"mu0\", \"mu1\", \"mu2\", \"mu3\") state_increase ##  mu0  mu1  mu2  mu3  ## 1.00 1.06 1.10 1.21 # Initial estimates of expected mortality of all states initial_mu <- mort_bckg_mu %*% t(state_increase) kable(as_tibble(initial_mu[1:6, ])) %>%   kable_styling(font_size = 11) nStates <- 4 excode_formula_multistate <- excodeFormula(\"MultiState\",   nStates = nStates,   intercept = FALSE,   offset = TRUE ) excode_family_nb <- excodeFamily(\"NegBinom\", nb_size = theta) excode_multistate_nb <- excodeModel(excode_family_nb,   excode_formula_multistate,   initial_mu = initial_mu ) # Create input data.frame mort_df_germany_input <- mort_df_germany %>%   mutate(     state = ifelse(bckg_week, 0, NA),     offset = mort_bckg_mu   ) %>%   dplyr::select(date, observed, offset, id, state)"},{"path":"https://robert-koch-institut.github.io/excode/articles/excode.html","id":"estimation-and-visualization-of-the-multistate-model","dir":"Articles","previous_headings":"The ‘MultiState’ model","what":"Estimation and visualization of the ‘MultiState’ model","title":"Excess count detection for epidemiological time series","text":"‘MultiState’ model can now fitted using run_excode() usual: results weekly excess probablities can plottad follows: Figure 6: Top: Weekly -cause mortaility Germany expected mortality normal three excess states shown. Weeks excess probabilty>0.5 shown blue. Bottom: Weekly excess probability.","code":"res_excode_multistate_nb <- run_excode(mort_df_germany_input,   excode_multistate_nb,   nrow(mort_df_germany_input),   return_full_model = TRUE,   time_units_back = 10 ) res_mort_germany <- summary(res_excode_multistate_nb) p1 <- ggplot(res_mort_germany %>% mutate(   obs_excess = ifelse(1 - posterior0 > 0.5, observed, NA),   group = \"Data and model fit\" )) +   geom_line(aes(x = date, y = observed, color = \"Week with excess probabilty<=0.5\"),     linewidth = 1   ) +   geom_line(aes(x = date, y = mu0, color = \"mu0 (normal)\"), linewidth = 0.75) +   geom_line(aes(x = date, y = mu1, color = \"mu1 (low excess)\"),     linewidth = 0.75, alpha = 0.75,     linetype = \"dashed\"   ) +   geom_line(aes(x = date, y = mu2, color = \"mu2 (medium excess)\"),     linewidth = 0.75, alpha = 0.75,     linetype = \"dashed\"   ) +   geom_line(aes(x = date, y = mu3, color = \"mu3 (high excess)\"),     linewidth = 0.75, alpha = 0.75,     linetype = \"dashed\"   ) +   geom_point(aes(x = date, y = obs_excess, color = \"Week with excess probabilty>0.5\")) +   geom_line(aes(x = date, y = obs_excess, color = \"Week with excess probabilty>0.5\"), linewidth = 1) +   scale_color_manual(values = c(\"lightgreen\", \"gold\", \"orange\", \"tomato\", \"black\", \"cornflowerblue\")) +   facet_wrap(~group, strip.position = \"right\") +   xlab(\"\") +   ylab(\"Number of deaths\") +   theme_bw() +   theme(     axis.text.y = element_text(angle = 90, vjust = 1, hjust = 0.5), legend.position = \"top\",     legend.title = element_blank(), legend.key.width = unit(1, \"cm\"),     plot.margin = unit(c(0, 0.5, 0, 0.5), \"cm\")   ) +   guides(color = guide_legend(override.aes = list(linewidth = 1.2)))  p2 <- ggplot(res_mort_germany %>% mutate(excess_prob = 1 - posterior0, group = \"Excess probability\")) +   geom_ribbon(aes(x = date, ymin = 0, ymax = excess_prob),     color = \"cornflowerblue\", fill = \"cornflowerblue\",     alpha = 0.75   ) +   geom_hline(yintercept = 0.5, linetype = \"dotted\", alpha = 0.5) +   facet_wrap(~group, strip.position = \"right\") +   xlab(\"Week of death\") +   ylab(\"Excess probability\") +   theme_bw() +   theme(axis.text.y = element_text(angle = 90, vjust = 1, hjust = 0.5)) +   scale_y_continuous(breaks = c(0, 0.5, 1)) +   theme(plot.margin = unit(c(0, 0.5, 0.5, 0.5), \"cm\"))  layout <- matrix(c(1, 1, 2), ncol = 1) grid.arrange(grobs = list(p1, p2), nrow = 2, layout_matrix = layout)"},{"path":"https://robert-koch-institut.github.io/excode/articles/excode.html","id":"a-short-overview-of-the-statistical-model","dir":"Articles","previous_headings":"","what":"A short overview of the statistical model","title":"Excess count detection for epidemiological time series","text":"excode package combines Generalized Linear Models (GLMs) Hidden Markov Models (HMMs). GLM part model allows use regression models model seasonal patterns general trends time series. Besides seasonal patterns general time trends, algorithm excess count detection needs account excess counts historic data used model estimation. HMM part statistical model used excode allows explicitly consider past disease outbreaks model. HMM separates time series two () states: normal state one (multiple) excess state. normal state, observed case counts lie within range normally expected certain time period. excess state, case counts higher normally expected, .e. potential outbreak excess mortality. contrast algorithms used excess count detection, either account previous excess case counts use heuristic weighting past instances excess counts. Figure 7: Components excode Harmonic model using Poisson distribution. components example two state model shown Figure 7. position \\(t\\) time series length \\(T\\) state \\(s_t \\\\left\\{ N,E\\right\\}, t\\\\left[1;T\\right]\\) , \\(N\\) represents normal \\(E\\) excess state. sequence normal excess states modeled HMM using initial state transition probabilites (left boxes Figure 7): Initial state probabilities \\(\\Pr(s_{1}=N\\bigr)\\) \\(\\Pr(s_{1}=E\\bigr)\\) give probability first time point time series respective state. Transition probabilities give probability time point \\(t\\) specific state, given state previous time point. instance, \\(\\Pr\\left(s_{t}=N\\left|s_{t-1}=N\\right.\\right)\\), \\(t\\\\left[1;T\\right]\\) gives probability time series normal state time point \\(t\\), given position \\(t-1\\) also normal state. \\(\\Pr\\left(s_{t}=E\\left|s_{t-1}=N\\right.\\right)\\) gives probability transition excess state time point \\(t\\), given \\(t-1\\) normal state. example shown Figure 7, case counts \\(c_{t}, t\\\\left[1;T\\right]\\) assumed follow Poisson distribution: \\(c_{t} \\sim Pois \\left(\\mu_{t}\\right)\\). expected case counts position \\(t\\), \\(\\mu_t\\) modeled using GLM using sine cosine functions control seasonal patterns (one models available excode): \\[ \\log\\mu_{t}=\\beta_{0}+\\beta_{1}t+ \\beta_3 \\cos(\\frac{2\\pi}{52}t) + \\beta_4\\sin(\\frac{2\\pi}{52}t) + \\beta_{5}\\left(s_{t}=E\\right) \\] , \\(\\beta_{0}\\) intercept, \\(\\beta_{1}t\\) linear time trend, \\(\\beta_3\\) \\(\\beta_4\\) model seasonal patterns using \\(\\sin\\) \\(\\cos\\) functions weekly data (52 time points per year). increase cases incorporated \\(\\beta_{5}\\). Based model, excode calculates probability excess case counts current time point - posterior probability (bottom middle box Figure 7). Moreover, given normally expected case counts model, p-value null hypothesis, excess current timepoint calculated (bottom right box Figure 7).","code":"har_model_pois <- run_excode(shadar_df, excode_har_pois, 285,   return_full_model = TRUE ) plot(har_model_pois)"},{"path":"https://robert-koch-institut.github.io/excode/authors.html","id":null,"dir":"","previous_headings":"","what":"Authors","title":"Authors and Citation","text":"Benedikt Zacher. Author, maintainer, copyright holder. Ann Christin Vietor. Contributor.","code":""},{"path":"https://robert-koch-institut.github.io/excode/authors.html","id":"citation","dir":"","previous_headings":"","what":"Citation","title":"Authors and Citation","text":"Zacher B (2025). excode: Excess Count Detection Epidemiological Time Series. R package version 0.0.0.9000, https://robert-koch-institut.github.io/excode/.","code":"@Manual{,   title = {excode: Excess Count Detection in Epidemiological Time Series},   author = {Benedikt Zacher},   year = {2025},   note = {R package version 0.0.0.9000},   url = {https://robert-koch-institut.github.io/excode/}, }"},{"path":"https://robert-koch-institut.github.io/excode/reference/calcEmissionProb.html","id":null,"dir":"Reference","previous_headings":"","what":"Calculate emission probabilities. — calcEmissionProb","title":"Calculate emission probabilities. — calcEmissionProb","text":"Calculate emission probabilities.","code":""},{"path":"https://robert-koch-institut.github.io/excode/reference/calcEmissionProb.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Calculate emission probabilities. — calcEmissionProb","text":"","code":"calcEmissionProb(distribution, modelData)  # S4 method for Poisson,data.frame calcEmissionProb(distribution, modelData)  # S4 method for NegBinom,data.frame calcEmissionProb(distribution, modelData)"},{"path":"https://robert-koch-institut.github.io/excode/reference/calcEmissionProb.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Calculate emission probabilities. — calcEmissionProb","text":"distribution 'Poisson 'NegBinom' object. modelData Input data.","code":""},{"path":"https://robert-koch-institut.github.io/excode/reference/calcEmissionProb.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Calculate emission probabilities. — calcEmissionProb","text":"Emission probabilites matrix, column contains probabilities one state.","code":""},{"path":[]},{"path":"https://robert-koch-institut.github.io/excode/reference/Custom-class.html","id":null,"dir":"Reference","previous_headings":"","what":"This class is a container for the parameterization using external data. — Custom-class","title":"This class is a container for the parameterization using external data. — Custom-class","text":"class container parameterization using external data.","code":""},{"path":"https://robert-koch-institut.github.io/excode/reference/Custom-class.html","id":"slots","dir":"Reference","previous_headings":"","what":"Slots","title":"This class is a container for the parameterization using external data. — Custom-class","text":"data data.frame containing variables used model case counts. variables data.frame used model. data.frame number rows time points time series. timepoints_per_unit Number time points within considered time unit (e.g. 52 weekly observations year). offset TRUE offset included model. formula_bckg formula models 'normal' (background) states. formula formula models includes variable(s) model 'excess' state(s).","code":""},{"path":"https://robert-koch-institut.github.io/excode/reference/Emission-class.html","id":null,"dir":"Reference","previous_headings":"","what":"This class is a generic container for the model used for excess count detection, which defines the probability distributions. — Emission-class","title":"This class is a generic container for the model used for excess count detection, which defines the probability distributions. — Emission-class","text":"class generic container model used excess count detection, defines probability distributions.","code":""},{"path":"https://robert-koch-institut.github.io/excode/reference/Emission-class.html","id":"slots","dir":"Reference","previous_headings":"","what":"Slots","title":"This class is a generic container for the model used for excess count detection, which defines the probability distributions. — Emission-class","text":"name Name emission. mu Matrix stores column mean respective state. mu0 Numeric vector containing mean 'normal' state 2-state models. mu1 Numeric vector containing mean 'excess' state 2-state models. Name emission.","code":""},{"path":"https://robert-koch-institut.github.io/excode/reference/Emission.html","id":null,"dir":"Reference","previous_headings":"","what":"Create an Emission object for excess count detection — Emission","title":"Create an Emission object for excess count detection — Emission","text":"Create Emission object excess count detection","code":""},{"path":"https://robert-koch-institut.github.io/excode/reference/Emission.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Create an Emission object for excess count detection — Emission","text":"","code":"Emission(distribution, excode_formula, initial_mu = NULL)"},{"path":"https://robert-koch-institut.github.io/excode/reference/Emission.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Create an Emission object for excess count detection — Emission","text":"distribution excodeFamily object. excode_formula excodeFormula object. initial_mu Initial estimates mean 'MultiState' models.","code":""},{"path":"https://robert-koch-institut.github.io/excode/reference/Emission.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Create an Emission object for excess count detection — Emission","text":"Emission object.","code":""},{"path":"https://robert-koch-institut.github.io/excode/reference/EmissionGLMNegBinom-class.html","id":null,"dir":"Reference","previous_headings":"","what":"This class defines the Emission function for Negative Binomial GLMs. — EmissionGLMNegBinom-class","title":"This class defines the Emission function for Negative Binomial GLMs. — EmissionGLMNegBinom-class","text":"class defines Emission function Negative Binomial GLMs.","code":""},{"path":"https://robert-koch-institut.github.io/excode/reference/EmissionGLMNegBinom-class.html","id":"slots","dir":"Reference","previous_headings":"","what":"Slots","title":"This class defines the Emission function for Negative Binomial GLMs. — EmissionGLMNegBinom-class","text":"distribution Name distribution (\"NegBinom\"). excode_formula excodeFormula object.","code":""},{"path":[]},{"path":"https://robert-koch-institut.github.io/excode/reference/EmissionGLMPoisson-class.html","id":null,"dir":"Reference","previous_headings":"","what":"This class defines the Emission function for Poisson GLMs. — EmissionGLMPoisson-class","title":"This class defines the Emission function for Poisson GLMs. — EmissionGLMPoisson-class","text":"class defines Emission function Poisson GLMs.","code":""},{"path":"https://robert-koch-institut.github.io/excode/reference/EmissionGLMPoisson-class.html","id":"slots","dir":"Reference","previous_headings":"","what":"Slots","title":"This class defines the Emission function for Poisson GLMs. — EmissionGLMPoisson-class","text":"distribution Name distribution (\"Poisson\"). excode_formula excodeFormula object.","code":""},{"path":[]},{"path":"https://robert-koch-institut.github.io/excode/reference/excode-package.html","id":null,"dir":"Reference","previous_headings":"","what":"excode: Excess Count Detection in Epidemiological Time Series — excode-package","title":"excode: Excess Count Detection in Epidemiological Time Series — excode-package","text":"Excess count detection ('excode') epidemiological time series important part public health surveillance systems. 'excode' package provides flexible framework implements well established approaches control seasonality, long-term trends historic events, also allows use customized models. combining hidden Markov models generalized linear models, 'excode' explicitly models normally expected case counts expected excess case counts.","code":""},{"path":"https://robert-koch-institut.github.io/excode/reference/excode-package.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"excode: Excess Count Detection in Epidemiological Time Series — excode-package","text":"Maintainer: Benedikt Zacher ZacherB@rki.de [copyright holder] contributors: Ann Christin Vietor [contributor]","code":""},{"path":"https://robert-koch-institut.github.io/excode/reference/excodeFamily-class.html","id":null,"dir":"Reference","previous_headings":"","what":"This class is a generic container for a family of probability distributions — excodeFamily-class","title":"This class is a generic container for a family of probability distributions — excodeFamily-class","text":"class generic container family probability distributions","code":""},{"path":"https://robert-koch-institut.github.io/excode/reference/excodeFamily-class.html","id":"slots","dir":"Reference","previous_headings":"","what":"Slots","title":"This class is a generic container for a family of probability distributions — excodeFamily-class","text":"name Name probability distribution. params Character vector name parameters.","code":""},{"path":"https://robert-koch-institut.github.io/excode/reference/excodeFamily.html","id":null,"dir":"Reference","previous_headings":"","what":"Create a family of probability distributions for excess count detection. — excodeFamily","title":"Create a family of probability distributions for excess count detection. — excodeFamily","text":"Create family probability distributions excess count detection.","code":""},{"path":"https://robert-koch-institut.github.io/excode/reference/excodeFamily.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Create a family of probability distributions for excess count detection. — excodeFamily","text":"","code":"excodeFamily(name, nb_size = NA, shared_nb_size = FALSE)"},{"path":"https://robert-koch-institut.github.io/excode/reference/excodeFamily.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Create a family of probability distributions for excess count detection. — excodeFamily","text":"name Name probability distribution used. Either \"Poisson\" \"NegBinom\". nb_size Size parameter Negative Binomial distribution. relevant 'MultiState' model used Negative Binomial dsitribution. shared_nb_size Logical indicating whether nb_size parameter shared across multiple time series. relevant name \"NegBinom\".","code":""},{"path":"https://robert-koch-institut.github.io/excode/reference/excodeFamily.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Create a family of probability distributions for excess count detection. — excodeFamily","text":"excodeFamily object.","code":""},{"path":[]},{"path":"https://robert-koch-institut.github.io/excode/reference/excodeFamily.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Create a family of probability distributions for excess count detection. — excodeFamily","text":"","code":"excode_family_pois <- excodeFamily(\"Poisson\") excode_family_pois #> excodeFamily: Poisson"},{"path":"https://robert-koch-institut.github.io/excode/reference/excodeFormula-class.html","id":null,"dir":"Reference","previous_headings":"","what":"This class is a generic container for a formula which specifies the model used for excess count detection. — excodeFormula-class","title":"This class is a generic container for a formula which specifies the model used for excess count detection. — excodeFormula-class","text":"class generic container formula specifies model used excess count detection.","code":""},{"path":"https://robert-koch-institut.github.io/excode/reference/excodeFormula-class.html","id":"slots","dir":"Reference","previous_headings":"","what":"Slots","title":"This class is a generic container for a formula which specifies the model used for excess count detection. — excodeFormula-class","text":"name Name model. Must one c(\"FarringtonNoufaily\", \"Harmonic\", \"Custom\", \"MultiState\"). shared_params Indicates whether model parameters shared across multiple time series. coefficients Coefficients fitted model. failed_optim TRUE error occured model fitting.","code":""},{"path":"https://robert-koch-institut.github.io/excode/reference/excodeFormula.html","id":null,"dir":"Reference","previous_headings":"","what":"Create a formula of the model for excess count detection — excodeFormula","title":"Create a formula of the model for excess count detection — excodeFormula","text":"Constructs model formula object detecting excess counts using various model types, Mean, Harmonic, Farrington-Noufaily, Custom, MultiState, Splines.","code":""},{"path":"https://robert-koch-institut.github.io/excode/reference/excodeFormula.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Create a formula of the model for excess count detection — excodeFormula","text":"","code":"excodeFormula(   name,   S = 1,   timepoints_per_unit = 52,   noPeriods = 10,   w = 3,   timeTrend = TRUE,   intercept = TRUE,   data = NULL,   df_season = 4,   df_trend = 1,   nStates = NULL,   shared_params = FALSE,   offset = FALSE )"},{"path":"https://robert-koch-institut.github.io/excode/reference/excodeFormula.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Create a formula of the model for excess count detection — excodeFormula","text":"name Character. Name model. Must one c(\"Mean\", \"FarringtonNoufaily\", \"Harmonic\", \"Custom\", \"MultiState\"). S Integer. Number oscillations one year Harmonic models. Default 1. timepoints_per_unit integer giving number time points within one time unit.  example, use 52 weekly data year, 7 daily data weekly cycles,  365 daily data annual cycles. default 52. noPeriods Integer. Number levels factor creates bins year model seasonal patterns. used 'FarringtonNoufaily' models. Default 10. w Integer. number weeks current week include bin contains respective week year. used 'FarringtonNoufaily' models. Default 3. timeTrend Logical. Indicates whether time trend included model. Used 'Mean', 'Harmonic' 'FarringtonNoufaily' models. Default TRUE. intercept Logical. TRUE model include intercept, FALSE otherwise. used 'MultiState' models.Default TRUE. data data.frame. data.frame containing variables used model case counts. variables data.frame used model. data.frame number rows time points time series. Default NULL. df_season Integer. Degrees freedom spline modeling seasonality. class uses cubic splines, recommended model periodic patterns.  used 'Splines' models. Default 4. df_trend Integer. Degrees freedom spline modeling time trend. used 'Splines' models. Default 1. nStates number states model. Default NULL. shared_params Logical. Indicates whether model parameters shared across multiple time series. Default FALSE. offset Logical. Whether offset included model. Default FALSE.","code":""},{"path":"https://robert-koch-institut.github.io/excode/reference/excodeFormula.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Create a formula of the model for excess count detection — excodeFormula","text":"S4 object class excodeFormula representing specified model formula.","code":""},{"path":[]},{"path":"https://robert-koch-institut.github.io/excode/reference/excodeFormula.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Create a formula of the model for excess count detection — excodeFormula","text":"","code":"excode_formula_har <- excodeFormula(\"Harmonic\")"},{"path":"https://robert-koch-institut.github.io/excode/reference/excodeModel-class.html","id":null,"dir":"Reference","previous_headings":"","what":"This class is a generic container for the model used for outbreak detection — excodeModel-class","title":"This class is a generic container for the model used for outbreak detection — excodeModel-class","text":"class generic container model used outbreak detection","code":""},{"path":"https://robert-koch-institut.github.io/excode/reference/excodeModel-class.html","id":"slots","dir":"Reference","previous_headings":"","what":"Slots","title":"This class is a generic container for the model used for outbreak detection — excodeModel-class","text":"nStates Number states hidden Markov model. emission Emission hidden Markov model. Includes excodeFamily excodeFormula object. transitions Transition proabilities hidden Markov model. transitions_prior Indicates whether prior transition probabilities used. prior_weights Dirichlet prior weights transition probabilities. changed user. loglik_transitions Prior log likelihood transition probabilities. relevant model fitting. initial_prob Initial state probabilities hidden Markov model. setBckgState Indicates whether background state computed model fitting. Background states set 0s time points Anscombe residuals initial model < 1. id Name time series method Method parameter estimation, one c(\"supervised\", \"unsupervised\"). Default: \"unsupervised\". converged Logical, indicating whether EM-algorithm converged. niter Maximum number iterations model fitting. LogLik Log lokelihood fitted model. AIC Akaike information criterion  fitted model. BIC Bayesian information criterion  fitted model. posterior Matrix posterior probabilities time point (rows) state (columns). alpha Alpha (Forward) probabilities HMM. pval P-value testing wheter timepoint normal excess state. timepoint_fit Numeric time point timeseries used fitting. timepoint Numeric time point timeseries used fitting. date Date time point. observed Vector observed number cases. population Population size, default: 1. error Character string error message (error occured).","code":""},{"path":"https://robert-koch-institut.github.io/excode/reference/excodeModel.html","id":null,"dir":"Reference","previous_headings":"","what":"Create a model for excess count detection — excodeModel","title":"Create a model for excess count detection — excodeModel","text":"Creates object class excodeModel modeling excess counts using Hidden Markov Model (HMM) user-defined emission distributions formula modeling observed counts.","code":""},{"path":"https://robert-koch-institut.github.io/excode/reference/excodeModel.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Create a model for excess count detection — excodeModel","text":"","code":"excodeModel(   family,   formula,   initial_mu = NULL,   transMat = NULL,   initProb = NULL,   transMat_prior = TRUE,   setBckgState = TRUE )"},{"path":"https://robert-koch-institut.github.io/excode/reference/excodeModel.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Create a model for excess count detection — excodeModel","text":"family excodeFamily object defining emission distribution (e.g., Poisson, Negative Binomial). formula excodeFormula object specifying structure model (e.g., time trends, seasonality, ...). initial_mu Initial estimates mean 'MultiState' models. transMat Inital transition probabilities. initProb numeric vector containing initial state probabilities (probabilities states first time point) hidden Markov model. transMat_prior Logical. prior distribution used estimating transition probabilities? Default TRUE. setBckgState Logical. background state inferred model fitting? Background states initialized 0 time points Anscombe residuals < 1 initial model. Default TRUE.","code":""},{"path":"https://robert-koch-institut.github.io/excode/reference/excodeModel.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Create a model for excess count detection — excodeModel","text":"object class excodeModel.","code":""},{"path":[]},{"path":"https://robert-koch-institut.github.io/excode/reference/excodeModel.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Create a model for excess count detection — excodeModel","text":"","code":"# Initialisation of a mean model without timetrend with Poisson emission  excode_formula_mean <- excodeFormula(\"Mean\", timeTrend = FALSE) excode_family_pois <- excodeFamily(\"Poisson\") excodeModel(excode_family_pois, excode_formula_mean) #> Inital excodeModel #>  excodeFamily: Poisson #>  excodeFormula: Mean #> No. of timepoints: 0"},{"path":"https://robert-koch-institut.github.io/excode/reference/FarringtonNoufaily-class.html","id":null,"dir":"Reference","previous_headings":"","what":"This class is a container for the parameterization of the FarringtonNoufaily models. — FarringtonNoufaily-class","title":"This class is a container for the parameterization of the FarringtonNoufaily models. — FarringtonNoufaily-class","text":"class container parameterization FarringtonNoufaily models.","code":""},{"path":"https://robert-koch-institut.github.io/excode/reference/FarringtonNoufaily-class.html","id":"slots","dir":"Reference","previous_headings":"","what":"Slots","title":"This class is a container for the parameterization of the FarringtonNoufaily models. — FarringtonNoufaily-class","text":"noPeriods Number levels factor creates bins year model seasonal patterns. w number weeks current week include bin contains respective week year. timeTrend Indicates whether time trend included model. timepoints_per_unit Number time points within considered time unit (e.g. 52 weekly observations year). offset TRUE offset included model. formula_bckg formula models 'normal' (background) states. formula formula models includes variable(s) model 'excess' state(s).","code":""},{"path":"https://robert-koch-institut.github.io/excode/reference/Harmonic-class.html","id":null,"dir":"Reference","previous_headings":"","what":"This class is a container for the parameterization of the Harmonic models. — Harmonic-class","title":"This class is a container for the parameterization of the Harmonic models. — Harmonic-class","text":"class container parameterization Harmonic models.","code":""},{"path":"https://robert-koch-institut.github.io/excode/reference/Harmonic-class.html","id":"slots","dir":"Reference","previous_headings":"","what":"Slots","title":"This class is a container for the parameterization of the Harmonic models. — Harmonic-class","text":"S Number oscillations one year. timeTrend Indicates whether time trend included model. timepoints_per_unit Number time points within considered time unit (e.g. 52 weekly observations year). offset TRUE offset included model. formula_bckg formula models 'normal' (background) states. formula formula models includes variable(s) model 'excess' state(s).","code":""},{"path":"https://robert-koch-institut.github.io/excode/reference/Mean-class.html","id":null,"dir":"Reference","previous_headings":"","what":"This class is a container for the parameterization of the Mean models. — Mean-class","title":"This class is a container for the parameterization of the Mean models. — Mean-class","text":"class container parameterization Mean models.","code":""},{"path":"https://robert-koch-institut.github.io/excode/reference/Mean-class.html","id":"slots","dir":"Reference","previous_headings":"","what":"Slots","title":"This class is a container for the parameterization of the Mean models. — Mean-class","text":"timeTrend Indicates whether time trend included model. timepoints_per_unit Number time points within considered time unit (e.g. 52 weekly observations year). offset TRUE offset included model. formula_bckg formula models 'normal' (background) states. formula formula models includes variable(s) model 'excess' state(s).","code":""},{"path":"https://robert-koch-institut.github.io/excode/reference/mort_df_germany.html","id":null,"dir":"Reference","previous_headings":"","what":"German all-cause mortality data — mort_df_germany","title":"German all-cause mortality data — mort_df_germany","text":"dataset containing number weekly deaths Germany reported German Federal Statistical Office https://www.destatis.de/DE/Themen/Gesellschaft-Umwelt/Bevoelkerung/Sterbefaelle-Lebenserwartung/sterbefallzahlen.html. variables follows:","code":""},{"path":"https://robert-koch-institut.github.io/excode/reference/mort_df_germany.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"German all-cause mortality data — mort_df_germany","text":"","code":"mort_df_germany"},{"path":"https://robert-koch-institut.github.io/excode/reference/mort_df_germany.html","id":"format","dir":"Reference","previous_headings":"","what":"Format","title":"German all-cause mortality data — mort_df_germany","text":"tibble 418 rows 7 variables: date Week death observed Number deaths id Name time series timepoint numeric column counting sequential weeks 0 total number weeks, representing time progression time-trend modeling sin52 Computed sinus component used harmonic modeling cos52 Computed cosine component used harmonic modeling bckg_week logical (`TRUE`/`FALSE`) variable marking background mortality weeks, used estimating model parameters.","code":""},{"path":"https://robert-koch-institut.github.io/excode/reference/MultiState-class.html","id":null,"dir":"Reference","previous_headings":"","what":"This class is a container for the parameterization of a MultiState model. — MultiState-class","title":"This class is a container for the parameterization of a MultiState model. — MultiState-class","text":"class container parameterization MultiState model.","code":""},{"path":"https://robert-koch-institut.github.io/excode/reference/MultiState-class.html","id":"slots","dir":"Reference","previous_headings":"","what":"Slots","title":"This class is a container for the parameterization of a MultiState model. — MultiState-class","text":"nStates number states model. data data.frame containing variables used model case counts. variables data.frame used model. data.frame number rows time points time series. intercept TRUE model include intercept, FALSE otherwise. timepoints_per_unit Number time points within considered time unit (e.g. 52 weekly observations year). offset TRUE offset included model. formula_bckg formula models 'normal' (background) states. formula formula models includes variable(s) model 'excess' state(s).","code":""},{"path":"https://robert-koch-institut.github.io/excode/reference/NegBinom-class.html","id":null,"dir":"Reference","previous_headings":"","what":"This class is a generic container for a family of Negative Binomial distributions — NegBinom-class","title":"This class is a generic container for a family of Negative Binomial distributions — NegBinom-class","text":"class generic container family Negative Binomial distributions","code":""},{"path":"https://robert-koch-institut.github.io/excode/reference/NegBinom-class.html","id":"slots","dir":"Reference","previous_headings":"","what":"Slots","title":"This class is a generic container for a family of Negative Binomial distributions — NegBinom-class","text":"shared_nb_size Logical indicating whether nb_size parameter shared across multiple time series model estimation. nb_size Size parameter Negative Binomial distribution. relevant 'MultiState' model used Negative Binomial dsitribution.","code":""},{"path":"https://robert-koch-institut.github.io/excode/reference/plot-excodeModel-ANY-method.html","id":null,"dir":"Reference","previous_headings":"","what":"Summary of an excodeModel. — plot,excodeModel,ANY-method","title":"Summary of an excodeModel. — plot,excodeModel,ANY-method","text":"Summary excodeModel.","code":""},{"path":"https://robert-koch-institut.github.io/excode/reference/plot-excodeModel-ANY-method.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Summary of an excodeModel. — plot,excodeModel,ANY-method","text":"","code":"# S4 method for excodeModel,ANY plot(x)"},{"path":"https://robert-koch-institut.github.io/excode/reference/plot-excodeModel-ANY-method.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Summary of an excodeModel. — plot,excodeModel,ANY-method","text":"x excodeModel object.","code":""},{"path":[]},{"path":"https://robert-koch-institut.github.io/excode/reference/plot-excodeModel-ANY-method.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Summary of an excodeModel. — plot,excodeModel,ANY-method","text":"","code":"# TODO"},{"path":"https://robert-koch-institut.github.io/excode/reference/plot_model.html","id":null,"dir":"Reference","previous_headings":"","what":"Plot sts object with excode results — plot_model","title":"Plot sts object with excode results — plot_model","text":"Plot sts object excode results","code":""},{"path":"https://robert-koch-institut.github.io/excode/reference/plot_model.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Plot sts object with excode results — plot_model","text":"","code":"plot_model(excode_model)"},{"path":"https://robert-koch-institut.github.io/excode/reference/plot_model.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Plot sts object with excode results — plot_model","text":"excode_model object class excodeModel specifies model parameters structure","code":""},{"path":"https://robert-koch-institut.github.io/excode/reference/plot_model.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Plot sts object with excode results — plot_model","text":"","code":"# TODO"},{"path":"https://robert-koch-institut.github.io/excode/reference/Poisson-class.html","id":null,"dir":"Reference","previous_headings":"","what":"This class is a generic container for a family of Poisson distributions — Poisson-class","title":"This class is a generic container for a family of Poisson distributions — Poisson-class","text":"class generic container family Poisson distributions","code":""},{"path":"https://robert-koch-institut.github.io/excode/reference/run_excode.html","id":null,"dir":"Reference","previous_headings":"","what":"Detect Excess Counts in Epidemiological Time Series — run_excode","title":"Detect Excess Counts in Epidemiological Time Series — run_excode","text":"function fits `excodeModel` epidemiological surveillance data returns estimated parameters `excodeFamily`. can handle single multiple time series.","code":""},{"path":"https://robert-koch-institut.github.io/excode/reference/run_excode.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Detect Excess Counts in Epidemiological Time Series — run_excode","text":"","code":"run_excode(   surv_ts,   excode_model,   timepoints,   learning_type = \"unsupervised\",   maxIter = 100,   verbose = FALSE,   return_full_model = FALSE,   past_timepoints_not_included = 26,   time_units_back = 5 )  # S4 method for sts,excodeModel run_excode(   surv_ts,   excode_model,   timepoints,   learning_type = \"unsupervised\",   maxIter = 100,   verbose = FALSE,   return_full_model = FALSE,   past_timepoints_not_included = 26,   time_units_back = 5 )  # S4 method for list,excodeModel run_excode(   surv_ts,   excode_model,   timepoints,   learning_type = \"unsupervised\",   maxIter = 100,   verbose = FALSE,   return_full_model = FALSE,   past_timepoints_not_included = 26,   time_units_back = 5 )  # S4 method for data.frame,excodeModel run_excode(   surv_ts,   excode_model,   timepoints,   learning_type = \"unsupervised\",   maxIter = 100,   verbose = FALSE,   return_full_model = FALSE,   past_timepoints_not_included = 26,   time_units_back = 5 )"},{"path":"https://robert-koch-institut.github.io/excode/reference/run_excode.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Detect Excess Counts in Epidemiological Time Series — run_excode","text":"surv_ts surveillance time series input. can one following: data.frame, can represent either single multiple time series.         data.frame contains following columns: date: date aggregation. observed: observed number cases. id: identifier time series (even one). offset (optional): example, susceptible population. state (optional): Indicates periods special events outbreaks             (e.g., 0 = normal, 1 = excess cases, NA = unknown). single sts object containing one timeseries. named list sts objects, representing separate time series. excode_model object class excodeModel specifies model parameters structure timepoints integer sequence integers specifying time points excess count detection performed. learning_type character string indicating type learning. Must one c(\"unsupervised\", \"semisupervised\", \"supervised\"). maxIter integer specifying maximum number iterations Expectation-Maximization (EM) algorithm. Defaults 100. verbose logical indicating whether progress printed execution. Defaults FALSE. return_full_model logical indicating whether return full model output. FALSE (default), results specified timepoints returned. TRUE, complete time series used model fitting returned. past_timepoints_not_included integer specifying number past time points exclude initialization. Defaults 26. data daily past x days excluded, weekly data past x weeks excluded. time_units_back integer specifying many past time units include fitting model. default 5. example, timepoints_per_unit = 52 (weekly data) specified excodeFormula, corresponds using past 5 years data. timepoints_per_unit = 7 (daily data units weeks) specified excodeFormula time_units_back equal 5 corresponds past 5 weeks.","code":""},{"path":"https://robert-koch-institut.github.io/excode/reference/run_excode.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Detect Excess Counts in Epidemiological Time Series — run_excode","text":"Returns fitted excodeModel object.","code":""},{"path":"https://robert-koch-institut.github.io/excode/reference/run_excode.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Detect Excess Counts in Epidemiological Time Series — run_excode","text":"function currently accepts single `sts` object, `data.frame`, **named list `sts` objects**. However, **`sts` object matrix** `measlesDE` dataset surveillance package currently supported result error.","code":""},{"path":[]},{"path":"https://robert-koch-institut.github.io/excode/reference/run_excode.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Detect Excess Counts in Epidemiological Time Series — run_excode","text":"","code":"# Creating a Poisson harmonic model for the examples excode_family_pois <- excodeFamily(\"Poisson\") excode_formula_har <- excodeFormula(\"Harmonic\") excode_har_pois <- excodeModel(   excode_family_pois,   excode_formula_har ) # Example 1: Using data.frame as input time series data(shadar_df) result_shadar_har <- run_excode(shadar_df, excode_har_pois, 209:295)   # Example 2: Using an sts object (from 'surveillance' package) as input time series library(surveillance) #> Loading required package: sp #> Loading required package: xtable #> This is surveillance 1.24.0; see ‘package?surveillance’ or #> https://surveillance.R-Forge.R-project.org/ for an overview. data(stsNewport) result_newport_har <- run_excode(stsNewport, excode_har_pois, 209:295)  # Example 3: Using a named list of two sts objects as input stsShadar <- surveillance::sts(shadar_df$observed,   epoch = shadar_df$date,   state = shadar_df$state ) named_list <- c(\"salmNewport\" = stsNewport, \"shadar\" = stsShadar) result_list <- run_excode(   named_list,   excode_har_pois, 290 )"},{"path":"https://robert-koch-institut.github.io/excode/reference/sarscov2_df.html","id":null,"dir":"Reference","previous_headings":"","what":"SARS-CoV-2 infections in Berlin-Neukölln (Germany) — sarscov2_df","title":"SARS-CoV-2 infections in Berlin-Neukölln (Germany) — sarscov2_df","text":"dataset containing daily number reported SARS-CoV-2 cases March-July 2020 Berlin-Neukölln https://robert-koch-institut.github.io/SARS-CoV-2-Infektionen_in_Deutschland/. dataset downloaded 2024-10-31. variables follows:","code":""},{"path":"https://robert-koch-institut.github.io/excode/reference/sarscov2_df.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"SARS-CoV-2 infections in Berlin-Neukölln (Germany) — sarscov2_df","text":"","code":"sarscov2_df"},{"path":"https://robert-koch-institut.github.io/excode/reference/sarscov2_df.html","id":"format","dir":"Reference","previous_headings":"","what":"Format","title":"SARS-CoV-2 infections in Berlin-Neukölln (Germany) — sarscov2_df","text":"data.frame 154 rows 3 variables: date Day data collection observed Number cases id Name time series","code":""},{"path":"https://robert-koch-institut.github.io/excode/reference/shadar_df.html","id":null,"dir":"Reference","previous_headings":"","what":"Salmonella Hadar cases in Germany 2001-2006 — shadar_df","title":"Salmonella Hadar cases in Germany 2001-2006 — shadar_df","text":"dataset containing weekly number reported Salmonella Hadar cases January 2001 August 2006 Germany. variables follows:","code":""},{"path":"https://robert-koch-institut.github.io/excode/reference/shadar_df.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Salmonella Hadar cases in Germany 2001-2006 — shadar_df","text":"","code":"shadar_df"},{"path":"https://robert-koch-institut.github.io/excode/reference/shadar_df.html","id":"format","dir":"Reference","previous_headings":"","what":"Format","title":"Salmonella Hadar cases in Germany 2001-2006 — shadar_df","text":"data.frame 295 rows 3 variables: date Week death observed Number cases id Name time series","code":""},{"path":"https://robert-koch-institut.github.io/excode/reference/snewport_df.html","id":null,"dir":"Reference","previous_headings":"","what":"Salmonella Newport cases in Germany 2004-2014 — snewport_df","title":"Salmonella Newport cases in Germany 2004-2014 — snewport_df","text":"dataset containing weekly number reported Salmonella Newport cases January 2004 February 2014 Germany. variables follows:","code":""},{"path":"https://robert-koch-institut.github.io/excode/reference/snewport_df.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Salmonella Newport cases in Germany 2004-2014 — snewport_df","text":"","code":"snewport_df"},{"path":"https://robert-koch-institut.github.io/excode/reference/snewport_df.html","id":"format","dir":"Reference","previous_headings":"","what":"Format","title":"Salmonella Newport cases in Germany 2004-2014 — snewport_df","text":"data.frame 528 rows 3 variables: date Week death observed Number cases id Name time series","code":""},{"path":"https://robert-koch-institut.github.io/excode/reference/Splines-class.html","id":null,"dir":"Reference","previous_headings":"","what":"This class is a container for the parameterization of Spline models. This class is experimental and not recommended for use! — Splines-class","title":"This class is a container for the parameterization of Spline models. This class is experimental and not recommended for use! — Splines-class","text":"class container parameterization Spline models. class experimental recommended use!","code":""},{"path":"https://robert-koch-institut.github.io/excode/reference/Splines-class.html","id":"slots","dir":"Reference","previous_headings":"","what":"Slots","title":"This class is a container for the parameterization of Spline models. This class is experimental and not recommended for use! — Splines-class","text":"df_season Degrees freedom spline modeling seasonality. class uses cubic splines, recommended model periodic patterns. df_trend Degrees freedom spline modeling time trend timeTrend Indicates whether time trend included model. timepoints_per_unit Number time points within considered time unit (e.g. 52 weekly observations year). offset TRUE offset included model. formula_bckg formula models 'normal' (background) states. formula formula models includes variable(s) model 'excess' state(s).","code":""},{"path":"https://robert-koch-institut.github.io/excode/reference/summary-excodeModel-method.html","id":null,"dir":"Reference","previous_headings":"","what":"Summary of an excodeModel. — summary,excodeModel-method","title":"Summary of an excodeModel. — summary,excodeModel-method","text":"Provides summary excodeModel object, containing results time points excess count detection performed. default, summary includes model-based expectations, posterior probabilities, p-values, corresponding signal thresholds, computed according model specification.","code":""},{"path":"https://robert-koch-institut.github.io/excode/reference/summary-excodeModel-method.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Summary of an excodeModel. — summary,excodeModel-method","text":"","code":"# S4 method for excodeModel summary(   object,   pars = c(\"posterior\", \"pval\", \"date\", \"timepoint\", \"observed\", \"emission\", \"id\", \"BIC\",     \"AIC\"),   prob_threshold = 0.5,   pval_threshold = 0.01,   maxiter = 1000 )"},{"path":"https://robert-koch-institut.github.io/excode/reference/summary-excodeModel-method.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Summary of an excodeModel. — summary,excodeModel-method","text":"object object class excodeModel. fitted model summarize. pars Character vector. Specifies parameters variables extract include summary. Typical entries include: \"posterior\", \"pval\", \"date\", \"timepoint\", \"observed\", \"emission\", \"id\", \"BIC\", \"AIC\". Default includes . prob_threshold Numeric. Posterior probability threshold used calculate upper bound expected number cases posterior. value controls sensitivity alarm detection: lower prob_threshold results lower posterior_ub. computed upper bound returned posterior_ub column summary output. Observations posterior probability greater equal threshold marked excess count. Default 0.5. pval_threshold Numeric. p-value threshold used used calculate upper bound expected number cases using quantiles based p-value. threshold determines sensitivity detection: lower values result conservative signal classification. used compute pval_ub column summary output. Observations p-value less equal threshold marked excess counts. Default 0.01. maxiter Integer. Maximum number iterations use estimating posterior alarm threshold. Default 1000.","code":""},{"path":"https://robert-koch-institut.github.io/excode/reference/summary-excodeModel-method.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Summary of an excodeModel. — summary,excodeModel-method","text":"data.frame summarizing selected components excodeModel, including expected values, posterior, p-value, model fit metrics (AIC BIC) depending values pars.","code":""},{"path":[]},{"path":"https://robert-koch-institut.github.io/excode/reference/summary-excodeModel-method.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Summary of an excodeModel. — summary,excodeModel-method","text":"","code":"# Looking at summary of the results using a harmonic Poisson model on the shadar_df if (FALSE) { #' excode_family_pois <- excodeFamily(\"Poisson\") excode_formula_har <- excodeFormula(\"Harmonic\") excode_har_pois <- excodeModel(excode_family_pois, excode_formula_har) # perform excess count detection for time points 209:295 result_shadar_har <- run_excode(shadar_df, excode_har_pois, 209:295) # obtain the summary of the results for the time points 209:295 summary(result_shadar_har) }"},{"path":"https://robert-koch-institut.github.io/excode/news/index.html","id":"excode-0009000","dir":"Changelog","previous_headings":"","what":"excode 0.0.0.9000","title":"excode 0.0.0.9000","text":"inital release excode (development version), provides code excess count detection epidemiological time series.","code":""}]
